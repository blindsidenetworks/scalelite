env:
  RUBY_VERSION: 2.7.2
  DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres

name: CI
on:
  push:
    branches: "*"
  pull_request:
    branches: "*"

jobs:
  test:
    name: Rubocop + Rails Test
    runs-on: ubuntu-20.04

    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        # Health checks to wait until postgres is ready
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Ruby ${{ env.RUBY_VERSION }}
        uses: actions/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}

      - name: Bundle cache
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Bundle install
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Run Rubocop
        run: bundle exec rubocop --fail-level F

      - name: Run Rails Test
        env:
          DATABASE_URL: postgres://postgres:password@localhost:5432/scalelite_test
        run:  |
          bundler exec rails test:db

      # - name: Trigger Build Workflow
      #   env:
      #     CR_PAT: ${{ secrets.CR_PAT }}
      #   if: ${{env.CR_PAT}} && success()
      #   uses: peter-evans/repository-dispatch@v1
      #   with:
      #     token: ${{env.CR_PAT}} || ''
      #     repository: ${{ github.repository }}
      #     event-type: trigger-build
      #     client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
